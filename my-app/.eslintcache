[{"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\index.js":"1","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\App.js":"2","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Footer.js":"3","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Header.js":"4","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\HomeScreen.js":"5","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Product.js":"6","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Rating.js":"7","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ProductScreen.js":"8","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\store.js":"9","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\productReducer.js":"10","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\productActions.js":"11","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\productConstants.js":"12","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Message.js":"13","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Loader.js":"14","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\CartScreen.js":"15","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\cartReducers.js":"16","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\cartActions.js":"17","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\cartConstants.js":"18","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\LoginScreen.js":"19","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\userActions.js":"20","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\FormContainer.js":"21","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\userConstants.js":"22","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\userReducers.js":"23","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\RegisterScreen.js":"24","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ProfileScreen.js":"25","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ShippingScreen.js":"26","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\CheckoutSteps.js":"27","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\PaymentScreen.js":"28","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\PlaceOrderScreen.js":"29","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\orderReducers.js":"30","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\orderActions.js":"31","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\orderConstants.js":"32","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\OrderScreen.js":"33","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\UserListScreen.js":"34"},{"size":331,"mtime":1621976749986,"results":"35","hashOfConfig":"36"},{"size":1729,"mtime":1622020279604,"results":"37","hashOfConfig":"36"},{"size":365,"mtime":1610359228755,"results":"38","hashOfConfig":"36"},{"size":2479,"mtime":1622018174144,"results":"39","hashOfConfig":"36"},{"size":1093,"mtime":1611295675583,"results":"40","hashOfConfig":"36"},{"size":1091,"mtime":1610314562365,"results":"41","hashOfConfig":"36"},{"size":2150,"mtime":1610308436861,"results":"42","hashOfConfig":"36"},{"size":3758,"mtime":1616189911466,"results":"43","hashOfConfig":"36"},{"size":1864,"mtime":1614454208405,"results":"44","hashOfConfig":"36"},{"size":1142,"mtime":1611388829544,"results":"45","hashOfConfig":"36"},{"size":1213,"mtime":1612203717105,"results":"46","hashOfConfig":"36"},{"size":374,"mtime":1611387840490,"results":"47","hashOfConfig":"36"},{"size":248,"mtime":1611295463103,"results":"48","hashOfConfig":"36"},{"size":403,"mtime":1611495726712,"results":"49","hashOfConfig":"36"},{"size":3624,"mtime":1616173824788,"results":"50","hashOfConfig":"36"},{"size":1467,"mtime":1614458366363,"results":"51","hashOfConfig":"36"},{"size":1305,"mtime":1612343588445,"results":"52","hashOfConfig":"36"},{"size":285,"mtime":1614458366363,"results":"53","hashOfConfig":"36"},{"size":2219,"mtime":1612087665706,"results":"54","hashOfConfig":"36"},{"size":5049,"mtime":1614458366363,"results":"55","hashOfConfig":"36"},{"size":345,"mtime":1612032205502,"results":"56","hashOfConfig":"36"},{"size":1112,"mtime":1614454567342,"results":"57","hashOfConfig":"36"},{"size":2702,"mtime":1614455012295,"results":"58","hashOfConfig":"36"},{"size":3231,"mtime":1616173824793,"results":"59","hashOfConfig":"36"},{"size":5528,"mtime":1613371895568,"results":"60","hashOfConfig":"36"},{"size":3103,"mtime":1612291576830,"results":"61","hashOfConfig":"36"},{"size":1602,"mtime":1612289228120,"results":"62","hashOfConfig":"36"},{"size":2179,"mtime":1612334685215,"results":"63","hashOfConfig":"36"},{"size":5162,"mtime":1616323160730,"results":"64","hashOfConfig":"36"},{"size":2581,"mtime":1614455299027,"results":"65","hashOfConfig":"36"},{"size":3485,"mtime":1613371895568,"results":"66","hashOfConfig":"36"},{"size":883,"mtime":1614455012296,"results":"67","hashOfConfig":"36"},{"size":6546,"mtime":1613303025938,"results":"68","hashOfConfig":"36"},{"size":1439,"mtime":1622020279604,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"slh4pi",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\index.js",[],["142","143"],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\App.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Footer.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Header.js",["144"],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\HomeScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Product.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Rating.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ProductScreen.js",["145","146"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions'\r\n//import products from '../products'\r\n// import axios from 'axios'\r\n\r\nexport default function ProductScreen({ history, match }) {\r\n\r\n  const [qty, setQty] = useState(1)\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  // const [product, setProduct] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //     const fetchProducts = async () => {\r\n  //         const { data } = await axios.get(`/api/products/${match.params.id}`)\r\n\r\n  //         setProduct(data)\r\n  //     }\r\n  //     fetchProducts()\r\n  // }, [])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  return (\r\n    <div>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n            </Link>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>${product.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {product.countInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={qty}\r\n                        onChange={(e) => setQty(e.target.value)}\r\n                      >\r\n                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n              <ListGroup.Item>\r\n                <Button\r\n                  onClick={addToCartHandler}\r\n                  className='btn-block'\r\n                  type='button'\r\n                  disabled={product.countInStock === 0}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\store.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\productReducer.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\productActions.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\productConstants.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Message.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\Loader.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\CartScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\cartReducers.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\cartActions.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\cartConstants.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\LoginScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\userActions.js",["147"],"import axios from 'axios'\r\nimport { CART_RESET } from '../constants/cartConstants'\r\nimport { ORDER_LIST_ORDERS_RESET } from '../constants/orderConstants'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET\r\n} from '../constants/userConstants'\r\n\r\n// action for login*******************\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// action for register*****************\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// Action of logout*********************************\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  // localStorage.removeItem('cartItems')\r\n  // shippingAddress\r\n  localStorage.removeItem('shippingAddress')\r\n  dispatch({ type: USER_LOGOUT})\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_ORDERS_RESET })\r\n  // dispatch({ type: CART_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n// action for getting information of the customer*******************\r\nexport const getUserDetails = (profile) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const { userLogin: { userInfo } } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${profile}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// action for updating information of the customer*******************\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const { userLogin: { userInfo } } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// action for listing all users\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\FormContainer.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\userConstants.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\userReducers.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\RegisterScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ProfileScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\ShippingScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\components\\CheckoutSteps.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\PaymentScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\PlaceOrderScreen.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\reducers\\orderReducers.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\actions\\orderActions.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\constants\\orderConstants.js",[],"C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\OrderScreen.js",["148"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id\r\n  const [ sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n  //orderPay\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n  \r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const addPayPalScript = async () => {\r\n      const {data: clientId} = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if(!order || successPay) {\r\n        dispatch({ type: ORDER_PAY_RESET })\r\n        dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        // running the sdk javaScript\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n        // some condition\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","C:\\FileDrive\\My_projects\\Ecommerce_React_fullStack\\my-app\\src\\screens\\UserListScreen.js",["149","150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"161","line":32,"column":11,"nodeType":"159","messageId":"160","endLine":32,"endColumn":18},{"ruleId":"157","severity":1,"message":"162","line":32,"column":20,"nodeType":"159","messageId":"160","endLine":32,"endColumn":25},{"ruleId":"157","severity":1,"message":"163","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":20},{"ruleId":"157","severity":1,"message":"164","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":16},{"ruleId":"157","severity":1,"message":"164","line":5,"column":17,"nodeType":"159","messageId":"160","endLine":5,"endColumn":23},{"ruleId":"157","severity":1,"message":"165","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":23},{"ruleId":"157","severity":1,"message":"166","line":9,"column":9,"nodeType":"159","messageId":"160","endLine":9,"endColumn":17},{"ruleId":"157","severity":1,"message":"167","line":12,"column":27,"nodeType":"159","messageId":"160","endLine":12,"endColumn":32},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'CART_RESET' is defined but never used.","'Button' is defined but never used.","'LinkContainer' is defined but never used.","'dispatch' is assigned a value but never used.","'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]